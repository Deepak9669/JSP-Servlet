package com.rays.util;

import java.beans.PropertyVetoException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ResourceBundle;

import com.mchange.v2.c3p0.ComboPooledDataSource;

public final class JDBCDataSource {
	
	private static JDBCDataSource dataSource=null;
	private static ComboPooledDataSource cpdc=null;
	
	
	private JDBCDataSource() {
		
	}
	private static JDBCDataSource getInstance() {
		
		if(dataSource==null) {
			
			dataSource=new JDBCDataSource();
			dataSource.cpdc=new ComboPooledDataSource();
			
			ResourceBundle rb=ResourceBundle.getBundle("com.rays.bundle.app");
			
			try {
				dataSource.cpdc.setDriverClass(rb.getString("driver"));
				dataSource.cpdc.setJdbcUrl(rb.getString("url"));
				dataSource.cpdc.setUser(rb.getString("userName"));
				dataSource.cpdc.setPassword(rb.getString("password"));
				dataSource.cpdc.setAcquireIncrement(Integer.parseInt("AcquireIncrement"));
				dataSource.cpdc.setInitialPoolSize(Integer.parseInt("InitialPoolSize"));
				dataSource.cpdc.setMaxPoolSize(Integer.parseInt("maxPoolSize"));
				dataSource.cpdc.setMinPoolSize(Integer.parseInt("minPoolSize"));
			} catch (PropertyVetoException e) {
								e.printStackTrace();
			}
		}
		
		return dataSource;
	}
	 
   public static  Connection getConnection() throws SQLException {
	   return getInstance().cpdc.getConnection();
   }
   public static void closeConnection(Connection conn) throws SQLException {
	   if(conn!=null) {
		   conn.close();
	   }
   }
   public static void trnRollback(Connection conn) throws SQLException {
	   if(conn!=null) {
		   conn.rollback();
	   }
   }
   

}
